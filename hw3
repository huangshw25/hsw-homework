1)Method of complements the method of complements is a technique used to subtract one number from another using only addition of positive  
numbers. This method was commonly used in mechanical calculators and is still used in modern computers.

2)Byte The byte is a unit of digital information that most commonly consists of eight bits, representing a binary number. Historically,  
the byte was the number of bits used to encode a single character of text in a computer[1][2] and for this reason it is the smallest   
addressable unit of memory in many computer architectures.

3)Integer (computer science) Number that can be written without a fractional or decimal component

4)Floating point 在電腦科學中，浮點（英語：floating point，縮寫為FP）是一種對於實數的近似值數值表現法，由一個有效數字（即尾數）加上冪數來表示，通常是  
乘以某個基數的整數次指數得到。 以這種表示法表示的數值，稱為浮點數（floating-point number）。利用浮點進行運算，稱為浮點計算，這種運算通常伴隨著因為無法  
精確表示而進行的近似或捨入。

1)请证明:二进制的负数(two‘s complement of X)等于 X 的 ones’ complement + 1(即，X每位求反加1) 证：因为负数在计算机中以原码的补码表示，所以-x等于x改变  
符号位，此时对-x求反，符号位不变其余位全部改变，这里等于（x每位求反）；因为在计算机中正数的补码和反码和原码 一样，负数的反码为符号位不变其余都改变，补码  
是反码后+1，所以-x在计算机中表示为-x+1=x ones complement +1

2)Int8_t x = - 017; 请用8进制描述变量 x。在c中017即(017)8 -15=1000，0000，0000，0000，0000，0000，0000，1111 =0111， 1111， 1111, 1111, 1111,   
1111, 1111,0001 =27777777761 阅读维基百科” Two‘s complement”的内容，特别是Sign extension小节内容。

1)C程序:int8_t x = -0x1f; int y = x; 请用16进制描述变量 x 和 y，并说明 int y = x 的计算过程。
x = -0x1f，转换为十进制数为-31.而-31的原码表示为1000 0000 0000 0000 0000 0000 0001 1111，最高位为符号位（1为负数，0为非负数）。保持原码符号位不变，
其余为取反后再加1即可得到其补码表示1111 1111 1111 1111 1111 1111 1110 0001，然后把该二进制数转换为十六进制可得到0xffffffe1。

2)请用数学证明，为什么可以这么计算。
2.1 万能公式

所有的十进制数都可以用一个公式来表示：

num=An*10n+An-1*10n-1+……

指数n = an所在的位数，个位n=0，十位n=1，依次递增

而an = 对应位数上的数值

10 = 十进制

那么就有一个万能公式来描述所有进制的记数：
num=An*RN+An-1*Rn-1……


阅读维基百科” Floating point”的内容， 1) NaN 是什么?
