今天我要介紹冒泡排序和快排
首先先介紹冒泡排序
冒泡排序是由n個數字，經過兩次循環，每次循環都由變量i和j來掌握，第一次就是i=0，j=1如果i比j大就換位，一直換到都排好爲止
for（int i=0;i<num;i++)
{
  for(int j=i+1;j<num;j++)
  {
  if a[i]>a[j]
  {
    int temp=0;
    temp=a[i];
     a[i]=a[j];
     a[j]=temp;}
     }
     }
     以上就是冒泡排序，接下來我要介紹快排
快排就是將一個數組分成很多部分，通過遞歸的方式將數組排成固定的序列
下面就是快排的代碼了
#include<stdio.h>

void Permutations (int * ,int);
void swap(int *,int *);
void print(int *,int);

int main()
{
	int n,i;
	int a[100000]={0};
	scanf("%d",&n);
	for(i=0;i<n;i++)
	    a[i]=i+1;
	Permutations (a,n);
	return 0;
 } 

void Permutations (int* a,int n)
{
		print(a,n);
	int i,j=-1,k,t;
	for(i=n-1;i>=0;i--)
	{
	   	if(a[i]<a[i+1])  {	j=i; break; }
	   	else continue;
	}
	if(j==-1)  return ;
	for(i=j+1;i<=n;i++)
	{
		if(a[i]<a[j])   {	k=i-1; break;	}
		else continue;
	}
	swap(a+k,a+j); 
	t=(j+n)/2;
	for(i=j+1;i<=t;i++) 
	{
		k=n+j-i;
		swap(a+i,a+k);
	}
	Permutations (a,n);
}

void print(int *a,int n)
{
	int i=0;
	for(i=0;i<n;i++)
	   printf("%d",a[i]);
	printf("\n");
}

void swap(int *a,int *b)
{
	int temp=*a;
	*a=*b;
	*b=temp;
}
